// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Hello() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><title>Om</title><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\"><link type=\"text/css\" rel=\"stylesheet\" href=\"main.css\"><script src=\"https://unpkg.com/htmx.org@2.0.2\" integrity=\"sha384-Y7hw+L/jvKeWIRRkqWYfPcvVxHzVzn5REgzbawhxAuQGwX1XWe70vji+VSeHOThJ\" crossorigin=\"anonymous\"></script><script src=\"https://cdn.tailwindcss.com\"></script></head><body><div class=\"\" style=\"position: absolute; z-index: 10;\"><button hx-get=\"/download\" hx-swap=\"none\" onclick=\"window.location.href=&#39;/download&#39;;\">Download File</button><div class=\"fixed bottom-0 left-0 right-0 h-20 my-7 rounded-lg max-w-lg mx-auto py-5 bg-opacity-25 border-t border-white border-opacity-20 flex justify-center items-center backdrop-blur-lg shadow-md\"><div class=\"flex space-x-4\"><div class=\"flex flex-col cursor-pointer items-center text-white transition-transform duration-200 hover:scale-150\" onclick=\"toggleHelloWorld(&#39;helloWorld1&#39;, &#39;app1&#39;)\"><img src=\"https://via.placeholder.com/40\" alt=\"App\"> <span class=\"text-xs\">Application</span></div><div class=\"flex flex-col cursor-pointer items-center text-white transition-transform duration-200 hover:scale-150\" onclick=\"toggleHelloWorld(&#39;helloWorld2&#39;, &#39;app2&#39;)\"><img src=\"https://via.placeholder.com/40\" alt=\"Home\"> <span class=\"text-xs\">Home</span></div><div class=\"flex flex-col cursor-pointer items-center text-white transition-transform duration-200 hover:scale-150\" onclick=\"toggleHelloWorld(&#39;helloWorld3&#39;, &#39;app3&#39;)\"><img src=\"https://via.placeholder.com/40\" alt=\"About\"> <span class=\"text-xs\">About</span></div><div class=\"flex flex-col cursor-pointer items-center text-white transition-transform duration-200 hover:scale-150\" onclick=\"toggleHelloWorld(&#39;helloWorld4&#39;, &#39;app4&#39;)\"><img src=\"https://via.placeholder.com/40\" alt=\"contact\"> <span class=\"text-xs\">Contact</span></div><div class=\"flex flex-col cursor-pointer items-center text-white transition-transform duration-200 hover:scale-150\" onclick=\"toggleHelloWorld(&#39;helloWorld5&#39;, &#39;app5&#39;)\"><img src=\"https://via.placeholder.com/40\" alt=\"Demo\"> <span class=\"text-xs\">Demo</span></div></div></div><div id=\"helloWorld1\" style=\"height:75%;overflow: auto;\" class=\"hidden fixed bottom-20 left-0 right-0 p-5 h-full mt-7 mb-20 rounded-lg w-[95%] m-7 py-5 bg-opacity-25 border-t border-white border-opacity-20 flex justify-center items-center backdrop-blur-lg shadow-md\"><div class=\"bg-white p-9 \" style=\"width:90% ;overflow: auto;\"><form id=\"contact-form\" hx-post=\"/submit-form\" hx-target=\"#response\" hx-swap=\"innerHTML\" class=\"space-y-4 h-auto\" style=\"overflow: auto;\"><div class=\"mb-4\"><label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Name:</label> <input type=\"text\" id=\"name\" name=\"name\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Your Name\"></div><div class=\"mb-4\"><label for=\"phone\" class=\"block text-sm font-medium text-gray-700\">Phone Number:</label> <input type=\"tel\" id=\"phone\" name=\"phone\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Your Phone Number\"></div><div class=\"mb-4\"><label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email:</label> <input type=\"email\" id=\"email\" name=\"email\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Your Email\"></div><div class=\"mb-4\"><label for=\"course\" class=\"block text-sm font-medium text-gray-700\">Graduation Course Name:</label> <input type=\"text\" id=\"course\" name=\"course\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Your Graduation Course Name\"></div><div class=\"mb-4\"><label for=\"college\" class=\"block text-sm font-medium text-gray-700\">College Name:</label> <input type=\"text\" id=\"college\" name=\"college\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Your College Name\"></div><div class=\"mb-4\"><label for=\"school\" class=\"block text-sm font-medium text-gray-700\">School Name:</label> <input type=\"text\" id=\"school\" name=\"school\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Your School Name\"></div><div class=\"mb-4\"><label for=\"project1\" class=\"block text-sm font-medium text-gray-700\">Project 1 Name:</label> <input type=\"text\" id=\"project1\" name=\"project1\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Name of Project 1\"></div><div class=\"mb-4\"><label for=\"projectDetails\" class=\"block text-sm font-medium text-gray-700\">Project Details:</label> <textarea id=\"projectDetails\" name=\"projectDetails\" required class=\"mt-1 p-2 block w-full border border-gray-300 rounded-md shadow-sm focus:ring focus:ring-blue-300\" placeholder=\"Details about Project 1\"></textarea></div><button type=\"submit\" class=\"mt-4 w-full bg-blue-500 text-white font-semibold p-2 rounded-md hover:bg-blue-600\">Submit</button></form></div></div><div id=\"helloWorld2\" style=\"height:75%\" class=\"hidden fixed bottom-20 left-0 right-0 h-full mt-7 mb-20 rounded-lg w-{95%} m-7 py-5 bg-opacity-25 border-t border-white border-opacity-20 flex justify-center items-center backdrop-blur-lg shadow-md\"><span class=\"text-3xl\">Home</span><br><p>This is a resume Builder website </p></div><div id=\"helloWorld3\" style=\"height:75%\" class=\"hidden fixed bottom-20 left-0 right-0 h-full mt-7 mb-20 rounded-lg w-{95%} m-7 py-5 bg-opacity-25 border-t border-white border-opacity-20 flex justify-center items-center backdrop-blur-lg shadow-md\"><span class=\"text-3xl\">About page </span><br><p>I made this website, checkout my<a href=\"https://github.com/Omkumar2003\">github</a></p></div><div id=\"helloWorld4\" class=\"hidden fixed bottom-20 left-0 right-0 h-full mt-7 mb-20 rounded-lg w-{95%} m-7 py-5 bg-opacity-25 border-t border-white border-opacity-20 flex justify-center items-center backdrop-blur-lg shadow-md\"><span class=\"text-3xl\">Contact</span><br><p>I made this website, checkout my<a href=\"https://github.com/Omkumar2003\">github</a></p></div><div id=\"helloWorld5\" style=\"height:75%\" class=\"hidden fixed bottom-20 left-0 right-0 h-full mt-7 mb-20 rounded-lg w-{95%} m-7 py-5 bg-opacity-25 border-t border-white border-opacity-20 flex justify-center items-center backdrop-blur-lg shadow-md\"><span class=\"text-3xl\">Hello World 5</span></div><script>\r\n    function toggleHelloWorld(id, app) {\r\n        // Close all helloWorld divs\r\n        const allHelloWorldDivs = document.querySelectorAll('[id^=\"helloWorld\"]');\r\n        allHelloWorldDivs.forEach(div => {\r\n            if (div.id !== id) {\r\n                div.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        // Toggle the selected helloWorld div\r\n        const helloWorldDiv = document.getElementById(id);\r\n        helloWorldDiv.classList.toggle('hidden');\r\n\r\n        // Update the URL based on the app clicked\r\n        // const newUrl = `/${app}`;\r\n        // history.pushState(null, '', newUrl);\r\n    }\r\n</script><style>\r\n    .hidden {\r\n        display: none;\r\n    }\r\n</style></div><div id=\"container\"></div><div id=\"info\"><!-- <a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl ocean --></div><script type=\"importmap\">\r\n    {\r\n        \"imports\": {\r\n            \"three\": \"../build/threemodule.js\", \r\n            \"three/addons/\": \"./jsm/\"             \r\n        }\r\n    }\r\n</script><script type=\"module\">\r\n\r\n    import * as THREE from 'three';\r\n    import Stats from 'three/addons/libs/statsmodule.js';\r\n    import { GUI } from 'three/addons/libs/lilguimodule.js';\r\n    import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\n    import { Water } from 'three/addons/objects/Water.js';\r\n    import { Sky } from 'three/addons/objects/Sky.js';\r\n\r\n    let container, stats;\r\n    let camera, scene, renderer;\r\n    let controls, water, sun, mesh;\r\n\r\n    init();\r\n\r\n    function init() {\r\n        container = document.getElementById('container');\r\n\r\n        renderer = new THREE.WebGLRenderer();\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setAnimationLoop(animate);\r\n        renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n        renderer.toneMappingExposure = 0.5;\r\n        container.appendChild(renderer.domElement);\r\n\r\n        scene = new THREE.Scene();\r\n        camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 1, 20000);\r\n        camera.position.set(30, 30, 100);\r\n\r\n        sun = new THREE.Vector3();\r\n\r\n        const waterGeometry = new THREE.PlaneGeometry(10000, 10000);\r\n        water = new Water(\r\n            waterGeometry,\r\n            {\r\n                textureWidth: 512,\r\n                textureHeight: 512,\r\n                waterNormals: new THREE.TextureLoader().load('textures/waternormals.jpg', function (texture) {\r\n                    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n                }),\r\n                sunDirection: new THREE.Vector3(),\r\n                sunColor: 0xffffff,\r\n                waterColor: 0x001e0f,\r\n                distortionScale: 3.7,\r\n                fog: scene.fog !== undefined\r\n            }\r\n        );\r\n\r\n        water.rotation.x = -Math.PI / 2;\r\n        scene.add(water);\r\n\r\n        const sky = new Sky();\r\n        sky.scale.setScalar(10000);\r\n        scene.add(sky);\r\n\r\n        const skyUniforms = sky.material.uniforms;\r\n        skyUniforms['turbidity'].value = 10;\r\n        skyUniforms['rayleigh'].value = 2;\r\n        skyUniforms['mieCoefficient'].value = 0.005;\r\n        skyUniforms['mieDirectionalG'].value = 0.8;\r\n\r\n        const parameters = {\r\n            elevation: 2,\r\n            azimuth: 180\r\n        };\r\n\r\n        const pmremGenerator = new THREE.PMREMGenerator(renderer);\r\n        const sceneEnv = new THREE.Scene();\r\n\r\n        let renderTarget;\r\n\r\n        function updateSun() {\r\n            const phi = THREE.MathUtils.degToRad(90 - parameters.elevation);\r\n            const theta = THREE.MathUtils.degToRad(parameters.azimuth);\r\n            sun.setFromSphericalCoords(1, phi, theta);\r\n            sky.material.uniforms['sunPosition'].value.copy(sun);\r\n            water.material.uniforms['sunDirection'].value.copy(sun).normalize();\r\n\r\n            if (renderTarget !== undefined) renderTarget.dispose();\r\n\r\n            sceneEnv.add(sky);\r\n            renderTarget = pmremGenerator.fromScene(sceneEnv);\r\n            scene.add(sky);\r\n            scene.environment = renderTarget.texture;\r\n        }\r\n\r\n        updateSun();\r\n\r\n        const geometry = new THREE.BoxGeometry(30, 30, 30);\r\n        const material = new THREE.MeshStandardMaterial({ roughness: 0 });\r\n        mesh = new THREE.Mesh(geometry, material);\r\n        scene.add(mesh);\r\n\r\n        controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.maxPolarAngle = Math.PI * 0.495;\r\n        controls.target.set(0, 10, 0);\r\n        controls.minDistance = 40.0;\r\n        controls.maxDistance = 200.0;\r\n        controls.update();\r\n\r\n        stats = new Stats();\r\n        container.appendChild(stats.dom);\r\n\r\n        const gui = new GUI();\r\n        const folderSky = gui.addFolder('Sky');\r\n        folderSky.add(parameters, 'elevation', 0, 90, 0.1).onChange(updateSun);\r\n        folderSky.add(parameters, 'azimuth', -180, 180, 0.1).onChange(updateSun);\r\n        folderSky.open();\r\n\r\n        const waterUniforms = water.material.uniforms;\r\n        const folderWater = gui.addFolder('Water');\r\n        folderWater.add(waterUniforms.distortionScale, 'value', 0, 8, 0.1).name('distortionScale');\r\n        folderWater.add(waterUniforms.size, 'value', 0.1, 10, 0.1).name('size');\r\n        folderWater.open();\r\n\r\n        window.addEventListener('resize', onWindowResize);\r\n    }\r\n\r\n    function onWindowResize() {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    function animate() {\r\n        render();\r\n        stats.update();\r\n    }\r\n\r\n    function render() {\r\n        const time = performance.now() * 0.001;\r\n        mesh.position.y = Math.sin(time) * 20 + 5;\r\n        mesh.rotation.x = time * 0.5;\r\n        mesh.rotation.z = time * 0.51;\r\n        water.material.uniforms['time'].value += 1.0 / 60.0;\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    // Disable scrollbars and set canvas dimensions when everything is loaded\r\n    window.onload = function() {\r\n        document.body.style.overflow = 'hidden'; // Disable scrollbars\r\n\t\tdocument.body.style.margin = 0 ;\r\n\t\tdocument.body.style.padding = 0;\r\n\t};\r\n\r\n</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
